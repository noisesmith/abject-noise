@title fm synthesis composition

@s preface

<p>
Using literate programming.
</p>
<small>
(using the "lit" program, from <a href="">zyedidia</a>, written in D)
</small>

@s introduction, setup

<p>
The goal is to have an electronic music composition, created from source code,
where I am less likely to lose context.
</p>

@s the score - comprising The instruments we invoke, and their timings

@comment_type ;;; %s
--- score
;; a buzz harmonic
f 1 0 32768 10 0.9 0.8 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0.05

;; for playing around
;; i 9999 0 360000

i 1000 0 100
i 1100 10.14 89

i 2000 12.2 3
---

@s the synth


In the body of the instrument, we combine the parameters to create args to synthesis "opcodes".
This same body will be shared by multiple instruments, with different parameter settings.

@comment_type ;;; %s
--- synth body
  amod       poscil3 aidx1, amod1
  a1         poscil3 aidx, acar1+amod
  aclean     poscil3 ampdb(again), acar+a1, 1
  adist      limit aclean, -1, 1
  aout       = adist*ampdbfs(adb)
             outq aout, aout, aout, aout
    endin
---

@s the first instrument

@comment_type ;;; %s
--- long drone
    instr    1000 ; fm generator
;; fixed parameters
  amod1      = 3060.3
  acar1      = 503.293880
  aidx       = 402
  acar       = 0.02

;; then come the various curves.

  aidx1      lna 70, 121, 0.92, 0.08, p3
  again       lna -0.5, 3.0525, 0.9, 0.1, p3
  adb         lna -65, -15, 0.01, 0.25, p3
@{synth body}
---

@s another instrument

@comment_type ;;; %s
--- second long drone
    instr    1100 ; another fm generator
  amod1      lna 0, 3060.3, 0.5, 0.5, p3
  acar1      lna 503.293880, 0, 0.7, 0.3, p3
  aidx       = 402
  acar       = 0.2
  aidx1      lna 70, 121, 0.92, 0.08, p3
  again      lna -0.5, 5.0525, 0.9, 0.1, p3
  adb        lna -65, -15, 0.01, 0.25, p3

@{synth body}
---

@s more
@comment_type ;;; %s
--- shorter parameterized burst
    instr    2000
  amod1      = 2000
  acar1      = 700
  aidx       = 1000
  acar       = 43.77
  aidx1      = 212
  again      = 10.3
  adb        = -10

@{synth body}
---

@s udos
These UDOs help make curves that are more intuitive to me.

<p>
The parameters to
<a href="file:///usr/share/doc/csound-doc/html/linen.html">linen</a>
are amplitude, rise time, total duration, and decay time.
</p>
<p></p>
<p>
The parameters to this opcode: <code>min, max, fade-in, fade-out, duration</code>
make more sense to me.
</p>

@comment_type ;;; %s
--- udos
    opcode lna, a,iiiii
  imn, imx, iin, iiout, idur \
    xin
  aout linen (imx-imn), idur*iin, idur, idur*iiout
         ; between multiplying by (mx-mn), and adding mn back to out,
         ; we effectively the linen output between mn and mx
    xout aout+imn
    endop
---

@s miscellanea and the parent document

@comment_type ;;; %s
--- orc headers --- noWeave
  sr         =  48000
  ksmps      =  512
  nchnls     =  4
  0dbfs      =  1
---

@comment_type ;;; %s
--- cli opts --- noWeave
-Lstdin
-+rtaudio=jack
-odac
-iadc
-b 1024
-B 2048
---

--- debug / audition
  gilisten   OSCinit 4445

    opcode oscvar, a, Siii
  Spath, iini, ilo, ihi \
             xin
  kin        init iini
next:
  kk         OSClisten gilisten, Spath, "f", kin
if (kk == 0) goto done
             kgoto next
done:
    iscale   = ihi - ilo
    kval     port (kin*iscale)+ilo, 0.15
             xout a(kval)
    endop

    instr 9999
    amod1  oscvar "/mod1", 0, 0, 1000
    acar1  oscvar "/car1", 0, 0, 1000
    aidx   oscvar "/idx", 0, 0, 1000
    acar   oscvar "/car", 0, 0, 1000
    aidx1  oscvar "/idx1", 0, 0, 1000
    again  oscvar "/gain", 0, 0, 30
    adb    oscvar "/db", -65, -65, 0
    amute  oscvar "/mute", 0, 1, 0
    amod   poscil3 aidx1, amod1
    a1     poscil3 aidx, acar1+amod
    aclean poscil3 ampdb(again), acar+a1, 1
    adist  limit aclean, -1, 1
    aout   = adist*ampdbfs(adb)*amute
           outq aout, aout, aout, aout
    endin
---

@comment_type ;;; %s
@code_type csound .csd
--- composition.csd
<CsoundSynthesizer>
<CsOptions>
@{cli opts}
</CsOptions>
<CsInstruments>

@{orc headers}

@{udos}

@{long drone}
@{second long drone}
@{shorter parameterized burst}
@{debug / audition}

</CsInstruments>
<CsScore>

@{score}

e
</CsScore>
</CsoundSynthesizer>
---
